{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAqCpC,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACH,WAAUC,UAEnBG,EAAQ,CAACJ,WAAUC,S,GAGpBA,E,IA3CPL,EAAKY,iBAAiB,UAEtB,SAA0BC,GACtBA,EAAEC,iBACJ,IAAIC,EAAeF,EAAEG,cAAcC,SAC/BC,EAASC,OAAOJ,EAAaG,OAAOE,OACpCf,EAAQc,OAAOJ,EAAaV,MAAMe,OAClCC,EAAOF,OAAOJ,EAAaM,KAAKD,QAKtC,SAAyBf,EAAOgB,EAAMH,GAEpC,GAAIb,EAAQ,GAAKgB,EAAO,GAAKH,GAAU,EAGrC,OAFAI,EAAAxB,GAASyB,OAAOC,QAAS,0BACvBxB,EAAGyB,QAGP,IAAK,IAAIC,EAAI,EAAGA,GAAKR,EAAQQ,IAC3BvB,EAAcuB,EAAGrB,GAChBsB,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUyB,EAAKD,EAALvB,MACnBiB,EAAAxB,GAASyB,OAAOO,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAANF,EAAM,M,IAEpEG,OAAM,SAAAJ,G,IAAGxB,EAAQwB,EAARxB,SAAUyB,EAAKD,EAALvB,MACnBiB,EAAAxB,GAASyB,OAAOC,QAAQ,sBAAqCO,OAAf3B,EAAS,QAAY2B,OAANF,EAAM,M,IAErExB,GAASgB,C,CAlBXY,CAAgB5B,EAAOgB,EAAMH,E","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';  \n\nconst form = document.querySelector('.form')\n\n\n\n\nform.addEventListener('submit', formElementValue);\n\nfunction formElementValue(e) {\n    e.preventDefault()\n  let formElements = e.currentTarget.elements;\n  let amount = Number(formElements.amount.value);\n  let delay = Number(formElements.delay.value);\n  let step = Number(formElements.step.value);\n    \n  counterPromises(delay, step, amount);\n}\n\nfunction counterPromises(delay, step, amount) {\n\n  if (delay < 0 || step < 0 || amount <= 0) {\n    Notiflix.Notify.failure(`❌ Enter value > 0`);\n    form.reset();\n    return;\n  }\n  for (let i = 1; i <= amount; i++){\n    createPromise(i, delay)\n    .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    . catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delay += step;\n  }\n}\n\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject ({position, delay});\n      };\n      \n    }, delay);\n    \n  });\n  \n};\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","formElements","currentTarget","elements","amount","Number","value","step","$parcel$interopDefault","Notify","failure","reset","i","then","param","_$delay","success","concat","catch","$ce04d3a99e08e73b$var$counterPromises"],"version":3,"file":"03-promises.eac79259.js.map"}