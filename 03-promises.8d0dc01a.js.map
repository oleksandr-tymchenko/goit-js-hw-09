{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAqCpC,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAQ,C,SAACJ,E,MAAUC,GAAO,GAG3BA,EAAM,G,CA3CbL,EAAKY,iBAAiB,UAEtB,SAA0BC,GACtBA,EAAEC,iBACJ,IAAIC,EAAeF,EAAEG,cAAcC,SAC/BC,EAASC,OAAOJ,EAAaG,OAAOE,OACpCf,EAAQc,OAAOJ,EAAaV,MAAMe,OAClCC,EAAOF,OAAOJ,EAAaM,KAAKD,QAKtC,SAAyBE,EAAOD,EAAMH,GAEpC,GAAII,EAAQ,GAAKD,EAAO,GAAKH,GAAU,EAGrC,OAFAK,EAAAzB,GAAS0B,OAAOC,QAAQ,0BACtBzB,EAAG0B,QAGP,IAAK,IAAIC,EAAI,EAAGA,GAAKT,EAAQS,IAC3BxB,EAAcwB,EAAGL,GAChBM,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACnBkB,EAAAzB,GAAS0B,OAAOK,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAEtEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MACnBkB,EAAAzB,GAAS0B,OAAOC,QAAQ,sBAAoBrB,QAAeC,MAAU,IAEvEiB,GAASD,C,CAlBXU,CAAgB1B,EAAOgB,EAAMH,E","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';  \n\nconst form = document.querySelector('.form')\n\n\n\n\nform.addEventListener('submit', formElementValue);\n\nfunction formElementValue(e) {\n    e.preventDefault()\n  let formElements = e.currentTarget.elements;\n  let amount = Number(formElements.amount.value);\n  let delay = Number(formElements.delay.value);\n  let step = Number(formElements.step.value);\n    \n  counterPromises(delay, step, amount);\n}\n\nfunction counterPromises(delay, step, amount) {\n\n  if (delay < 0 || step < 0 || amount <= 0) {\n    Notiflix.Notify.failure(`❌ Enter value > 0`);\n    form.reset();\n    return;\n  }\n  for (let i = 1; i <= amount; i++){\n    createPromise(i, delay)\n    .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    . catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delay += step;\n  }\n}\n\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject ({position, delay});\n      };\n      \n    }, delay);\n    \n  });\n  \n};\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","formElements","currentTarget","elements","amount","Number","value","step","delay1","$parcel$interopDefault","Notify","failure","reset","i","then","success","catch","$47d4ff9957288465$var$counterPromises"],"version":3,"file":"03-promises.8d0dc01a.js.map"}